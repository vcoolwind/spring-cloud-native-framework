server:
  port: 8102

ratings:
  enabled: true
  servicename: ratings

configReload:
  enabled: true
  servicename: configreload

feign:
  hystrix:
    enabled: true

logging:
  level:
    web: info

spring:
  application:
    name: reviews
  datasource:
    #platform: ${DATASOURCE_PLATFORM:h2}
    #url: ${DATASOURCE_URL:jdbc:h2:mem:reviewdb;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL}
    #username: ${DATASOURCE_USERNAME:sa}
    #password: ${DATASOURCE_PASSWORD:}
    #driver-class-name: ${DATASOURCE_DRIVER:org.h2.Driver}
    platform: ${DATASOURCE_PLATFORM:pg}
    url: ${DATASOURCE_URL:jdbc:postgresql://192.168.92.1:5432/reviewdb}
    username: ${DATASOURCE_USERNAME:bookinfo}
    password: ${DATASOURCE_PASSWORD:bookinfo}
    driver-class-name: ${DATASOURCE_DRIVER:org.postgresql.Driver}
  jpa:
    show-sql: false
    # Hibernate additional native properties to set on the JPA provider.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        current_session_context_class: thread
        format_sql: true
        # Fix Postgres JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented).
        jdbc:
          lob:
            non_contextual_creation: true
    hibernate:
      # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
      # create-drop  update
      # DDL_AUTO=none and
      #Spring Boot automatically creates the schema of an embedded DataSource. This behavior can be customized by using the spring.datasource.initialization-mode property. For instance, if you want to always initialize the DataSource regardless of its type:
      #spring.datasource.initialization-mode=always

      # H2 will use schema-h2.sql and data.sql to fill data. pg do nothing

      ddl-auto: ${DDL_AUTO:none}
  http:
    log-request-details: false
  cloud:
    kubernetes:
      ribbon:
        enabled: true
        mode: SERVICE
        cluster-domain: cluster.local
        #find service in all namespaces,more than one service with same name will not work
        all-namespaces: true
      discovery:
        all-namespaces: true
eureka:
  client:
    service-url:
      #defaultZone: http://eureka:123@eureka1:8761/eureka/,http://eureka:123@eureka2:8762/eureka/
      defaultZone: http://admin:admin@127.0.0.1:8761/eureka/
  instance:
    prefer-ip-address: true
    metadata-map:
      addr: shenzhen china
      tel: 0755-10001